 [입력]
다 읽어서 메모리에 올려둔다? 어떻게 하지.
좌표를 담는 배열의 크기를 어떻게 정하나? 정적으로 가능하면 정적으로 할 것.(데이터가 공개될 경우)

 [그리드]
적절한 크기의 grid를 만든다. - 크기는 원의 크기에 따라 다름
각 좌표들이 어느 그리드에 속하는지 표시한다.
원과 겹치는 그리드를 모두 찾아낸다.

겹치는 그리드에 있는 좌표와 원의 중심 사이에 거리는 모두 체크한다.
원 안에 있으면서(x - cx)^2 + (y - cy)^2 <= r 가장 거리가 긴 좌표 중 인덱스가 빠른 점이 가장 먼 점이 됨.
겹치는 그리드에서 원 안에 든 좌표의 수 + 원 내부 그리드에 있는 좌표의 수 = 원에 있는 모든 점의 수

- 원의 크기와 좌표의 분포에 따라 적절히 그리드 크기를 설정해야 한다.
- 그리드를 만들 때 그리드 안에 있는 좌표의 수를 세어야 한다.
- 그리드 안의 좌표에 접근할 수 있어야 한다.

--------------------------------------------------------------------------------------------------------

 [레인지 기반]
레인지 트리를 만들고, 원 중심에서 반지름 만큼 되는 사각형을 외각으로, 
원 중심에서 반지름 / sqrt(2)를 내각으로 하여 내부에 든 좌표에 대해서
원 중심과의 거리를 구한다. 가장 길면서 인덱스가 빠른 점이 가장 먼 점이 됨.
원 안에 든 것들 개수도 구한다.

레인지 트리는 점의 개수와 점에 대한 레퍼런스를 기억해야 한다.


x-y 레인지 트리에 점의 개수와 레퍼런스가 들어가는 자료구조를 알아보자.
- 이는 입력을 훑으면서 만들 수 있는가?(O(N)으로?)

입력 -> 레인지 트리, 쿼리 리스트.
1 pass만으로 만들 수 있으면 최고다.

쿼리 리스트의 경우 realloc을 써서 adjust한다. 2배씩 expand. (최초 크기는 성능 조절 파라미터다.)

문제는 xy 레인지 트리다.. 가능하면 중간에 쓸데 없는 데이터 복사는 없었으면 한다.

xy 레인지 트리를 malloc으로 짜보고, 
가능하면 (시간이 될까?) custom memory allocator를 써서 최적화를 시도해보던지.

C/C++로 prop 테스트 하기.


https://stackoverflow.com/questions/44350170/most-efficient-way-to-select-point-with-the-most-surrounding-points
https://en.wikipedia.org/wiki/Sweep_line_algorithm

어떻게 균형있는 레인지 트리를 만드나? 레드 블랙 트리를 써라.
https://gist.github.com/VictorGarritano/5f894be162d39e9bdd5c

--------------------------------------------------------------------------------------------------------
파이썬에서 데이터를 생성하고, 시각화하고, C 프로그램을 테스트할까?
아무튼 데이터 생성 방법이 필요하고, prop 테스트를 해서
O(N^2) 알고리즘이 일단 통과를 해야 그 다음 일을 진행할 수 있다..

1) 점 넣기
2) 점 빼기
3) 쿼리
4) 정답 만들기 
5) C O(N^2)
6) C (rg-tree)
